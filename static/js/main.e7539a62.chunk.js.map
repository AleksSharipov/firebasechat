{"version":3,"sources":["components/Firebase.js","components/Login/Login.js","components/Chat/Chat.js","components/App/App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Login","history","useHistory","useState","nickname","userName","setUserName","ref","database","className","onSubmit","e","preventDefault","orderByChild","equalTo","once","snapshot","exists","localStorage","setItem","push","set","type","name","id","placeholder","onChange","target","value","Chat","chats","setChats","setNickname","message","userMsg","setUserMsg","snapshotToArray","returnArr","forEach","childSnapshot","item","val","key","useEffect","a","getItem","on","resp","fetchData","map","el","newMsg","persist","App","location","useLocation","to","pathname","state","from","path","SecureRoute","children","rest","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.e7539a62.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\nfirebase.initializeApp({\r\n  apiKey: \"AIzaSyAqc8FxCuzyGy_ZorwUCyEmKo0X1SyOPys\",\r\n    authDomain: \"chatapp-1b94b.firebaseapp.com\",\r\n    databaseURL: \"https://chatapp-1b94b-default-rtdb.firebaseio.com\",\r\n    projectId: \"chatapp-1b94b\",\r\n    storageBucket: \"chatapp-1b94b.appspot.com\",\r\n    messagingSenderId: \"1005508683128\",\r\n    appId: \"1:1005508683128:web:6dec9616968f95cda0d48d\"\r\n});\r\n\r\nexport default firebase;","import React, { useState } from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport firebase from '../Firebase';\r\n\r\nexport default function Login(){\r\n  const history = useHistory();\r\n  const [userName, setUserName] = useState({nickname: ''});\r\n  const ref = firebase.database().ref('users/');\r\n  \r\n  const onChanges = (e) =>{\r\n    setUserName({...userName, [e.target.name]: e.target.value})\r\n  }\r\n\r\n\r\n\r\n  function handleFormSubmit(e){\r\n    e.preventDefault();\r\n    ref.orderByChild('nickname').equalTo(userName.nickname).once('value', snapshot =>{\r\n      if(snapshot.exists()) {\r\n        localStorage.setItem('nickname', userName.nickname);\r\n        history.push('/chat');\r\n      } else {\r\n        const newUser = firebase.database().ref('users/').push();\r\n        newUser.set(userName);\r\n        localStorage.setItem('nickname', userName.nickname);\r\n        history.push('/chat');\r\n      }\r\n    })\r\n    \r\n    // setUserName('')\r\n  }\r\n\r\n  return (\r\n    <section className=\"login\">\r\n      <p className=\"login__descriptions\">Ваше имя для чата:</p>\r\n      <form onSubmit={handleFormSubmit} className=\"login__form\">\r\n        <input className=\"login__input\" type=\"text\" name=\"nickname\" id=\"nickname\" placeholder='Name' onChange={onChanges} value={userName.nickname}></input>\r\n        <button  className=\"login__btn\">Join</button>\r\n      </form>\r\n    </section>\r\n  )\r\n} ","import React, {useState, useEffect} from 'react';\r\n// import { useHistory } from 'react-router-dom';\r\nimport firebase from '../Firebase';\r\n\r\nexport default function Chat(){\r\n  const [chats, setChats] = useState([]);\r\n  const [nickname, setNickname] = useState('');\r\n  const [userMsg, setUserMsg] = useState({\r\n    nickname:'',\r\n    message:''\r\n  })\r\n  // const history = useHistory();\r\n\r\n  const snapshotToArray = (snapshot) => {\r\n    const returnArr = [];\r\n\r\n    snapshot.forEach((childSnapshot) => {\r\n        const item = childSnapshot.val();\r\n        item.key = childSnapshot.key;\r\n        returnArr.push(item);\r\n    });\r\n\r\n    return returnArr;\r\n}\r\n\r\n  useEffect(()=>{\r\n    const fetchData = async () => {\r\n      setNickname(localStorage.getItem('nickname'));\r\n      firebase.database().ref('chat/').on('value', resp => {\r\n        setChats([]);\r\n        setChats(snapshotToArray(resp));\r\n      });\r\n    };\r\n\r\n    fetchData();\r\n  }, [])\r\n\r\n\r\n  useEffect(()=>{\r\n    const fetchData = async () =>{\r\n      setNickname(localStorage.getItem('nickname'));\r\n    };\r\n    fetchData();\r\n  }, [])\r\n\r\n  const submitMessage = (e) => {\r\n    e.preventDefault();\r\n    if(userMsg.message){\r\n      const newMsg = userMsg;\r\n      newMsg.nickname = nickname;\r\n      const newMessage = firebase.database().ref('chat/').push();\r\n      newMessage.set(newMsg);\r\n      setUserMsg({\r\n        nickname:'',\r\n        message:''\r\n      })\r\n    }\r\n    \r\n  }\r\n\r\n  const onChange = (e) => {\r\n    e.persist();\r\n    setUserMsg({...userMsg, [e.target.name]: e.target.value});\r\n}\r\n\r\n  return (\r\n    <section className=\"chat\">\r\n      <ul className=\"chat__list\">\r\n        {\r\n          chats.map(el =>{\r\n            return el.nickname === nickname ? <li key={el.key} className=\"chat__msg chat__mymsg\"><span className=\"chat__nick\">Me</span>{el.message}</li> : <li className=\"chat__msg chat__anymsg\" key={el.key}><span className=\"chat__nick\">{el.nickname}</span>{el.message}</li>\r\n            //  return <li key={el.key}>{el.message}</li>\r\n          })\r\n        }\r\n      </ul>\r\n      <form className=\"chat__form\" onSubmit={submitMessage}>\r\n        <input className=\"chat__input\" type=\"text\" name=\"message\" id=\"message\" value={userMsg.message} onChange={onChange} placeholder=\"Message\"></input>\r\n        <button className=\"chat__btn\">Send</button>\r\n      </form>\r\n    </section>\r\n  )\r\n} ","import {BrowserRouter as Router, Switch, Route, Redirect, useLocation} from 'react-router-dom';\nimport Login from '../Login/Login';\nimport Chat from '../Chat/Chat';\n\n\nfunction App() {\n  let location = useLocation();\n\n  return (\n    <Router>\n      <div>\n        <Redirect\n          to={{\n            pathname: \"/chat\",\n            state: {from: location}\n          }}\n        />\n        <Switch>\n          <Route path=\"/login\">\n            <Login/>\n          </Route>\n          <SecureRoute path=\"/chat\">\n            <Chat/>\n          </SecureRoute>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n\n\nfunction SecureRoute({ children, ...rest}) {\n  return (\n    <Route\n      {...rest}\n      render={({location}) => \n        localStorage.getItem('nickname') ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: {from: location}\n            }}\n          />\n        )\n    }\n    />\n  )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport {BrowserRouter} from 'react-router-dom'\n\nReactDOM.render(\n  <BrowserRouter>\n    <App/>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}